name: Build Back End Environment (AS, SQL Server, DB, etc.)

# Triggers, on specific branches
on:
  # marks it as a callee workflow:
  workflow_call:
  # define optional and requierd inputs
  # required from caller: 
    inputs:
      # ======================================================================
      # PROJECT VARIABLES
      # ======================================================================
      # The project name, which informs naming of 
      # Azure resource groups and resource names 
      # definately changes per project.
      # Note: it could be set here, or come from GitHUb repo vars:
      PROJECT_NAME:
        required: true
        type: string
      PROJECT_SERVICE_NAME:
        required: false
        type: string
      PROJECT_ENVIRONMENT_ID:
        required: true
        type: string
      PROJECT_DESCRIPTION:
        required: false
        type: string
      # ======================================================================
      # SRC VARIABLES
      # ======================================================================
      SRC_REPO_GITHUB_USER_AND_REPO_NAME:
        required: true
        type: string
      SRC_REPO_BRANCH:
        required: true
        type: string
      SRC_REPO_SOURCE_ENTRY_FOLDER:
        required: true
        type: string
      # ======================================================================
      # AZURE VARIABLES
      # ======================================================================
      AZURE_LOCATION_ID:
        required: true
        type: string
      APP_NAME:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_ENTRA_APP_CLIENT_CREDS:
        required: true
      DB_ADMIN_NAME:
        required: true
      DB_ADMIN_PWD:
        required: true
        
env:
  # ======================================================================
  # LIB VARIABLES
  # ======================================================================
  # The file invoked changes per project/service/tier:
  # As do the parameters (at bottom) that are supplied.
  LIB_REPO_MAIN_BICEP_FILE: "back-end-deployment.bicep"
  # Whereas these vars probably don't change project to project,
  # which define where to download lib files from, the dir to deploy to here
  # and the folder to find the above script in:
  LIB_REPO_GITHUB_USER_AND_REPO_NAME: "skysgh/resources.deployments.lib"
  LIB_REPO_BRANCH: main
  LIB_REPO_SOURCE_ENTRY_FOLDER: "SOURCE/infrastructure/azure/bicep/recipes"
  LIB_REPO_DEPLOYMENT_DIR: "DeploymentLib" 
  # ======================================================================


# Running on one runner:      
jobs:
  # again defining it as a callee job:
  reusable_workflow_job:
    # the rest is as per normal job:
    runs-on: ubuntu-latest
    # TODO: make this changeable by branch/tag:
    environment: "NP"
    env:
      # DEFINE REPO CONSTANTS
      NODE_VERSION: 20.11.0
      # ACTIONS_STEP_DEBUG: 'true' 
      ACTIONS_RUNNER_DEBUG: "true"
    steps:
      # ==================================================
      - name: "B.01: Description"
        run: |
          echo "::group::Purpose"
          echo "Deploys the infrastructure for supporting"
          echo "the back end of a service."
          echo "::endgroup::"
    # ==================================================
      - name: "B.02: Explanations"
        run: |
          echo "::group::Purpose"
          echo "At a high level, it is to develop"
          echo "the backend infrastructure needed for"
          echo "WWW accessible services."
          echo "::endgroup::"
          echo "::group::Workflow Chaining"
          echo "This is a reusable 'recipe' workflow"
          echo "intended to push as much logic as reasonable"
          echo "into a reusable file, leaving the minimum setup"
          echo "to a 'thin' yaml file in the service's source code."
          echo "::endgroup::"
          echo "::group::Components"
          echo "The components it develops are as follows:"
          echo "- A shared App Service Environment, on which is hosted"
          echo "- An App Service, which is given"
          echo "- A Managed Identity, given access to "
          echo "- A Runtime KeyVault, and "
          echo "- A Storage Account, on which"
          echo "- A Publicly accesssible Container (for media), and"
          echo "- A Privately accesssible Container (for media resources)"
          echo "- A Cache Service"
          echo "- A Search Service"
          echo "- A Sql Server Database Server, on which"
          echo "- A firewall rule is developed to restrict/permit only Azure devices, and"
          echo "- A Sql Server Database is developed, with the"
          echo "- the MI given create permission to the database, so that"
          echo "  has sufficient rights to use CodeFirst to create a Db schema."
          echo "- Backups are developed to store the db data to the Storage Account for 31 days."
          echo "::endgroup::"
    # ==================================================
      - name: "B.03: Details"
        run: |
          echo "::group::Infrastructure Details"
          echo "As for individual component purpose and settings:"
          echo "- Sql Server:"
          echo "  - Resourcing:"
          echo "    - SKU is standard and not Premium,"
          echo "      until a proven need unsovlvable otherwirse is shown,"
          echo "      expecting developers to use Cache aggressively."
          echo "    - after 2 hours of no activity, it is hybernated to save cost,"
          echo "      affecting the fist client after that period (e.g. in the morning)."
          echo "    - Sizing is 1Gb, expecting developers"
          echo "      design concisely, and"
          echo "      save media separately (in storage account containers)"
          echo "  - Security:"
          echo "    - TLS is 1.2 because Azure is not yet supporting 1.3."
          echo "      (although the parameter is accepted, it times out without explanation)."
          echo "  - Accessibility:"
          echo "    - Collation is as is for handling Maori."
          echo "  - Recoverability:"
          echo "    - Developers are expected to delete by state, not physically."
          echo "    - Ledger functionality is on by default."
          echo "    - Backup is extended to 31 days."
          echo "- Web Server:"
          echo "  - ASE: hosted on a shared ASE because it is immaterial to risk"
          echo "    (essentially, a negligeable probability that a bad actor gains access"
          echo "    specifically due to being installed on the same device, as oppossed"
          echo "    to gaining access by other means which an isolated ASE can't solve anyway)."
          echo "  - Firewall: default baseline firewall capabilities are provided by Azure",
          echo "    for free, but it remains important that developers develop following best" 
          echo "    security practice, namely preventing injection attacks, while they authenticate, "
          echo "    authorise, log, monitor, alert activity as requierd."
          echo "- Storage Account:"
          echo "  - one container is for direct unauthenticated access from"
          echo "    service client to resource saving cost."
          echo "  - one container is for managed authenticated and authorised proxied access from"
          echo "    service client to service to storage account."
          echo "  - a separate service account and containers are used for storage backup."
          echo "- Cache:"
          echo "  - essential to reducing pressure on Sql Server."
          echo "  - is not an inconsequential cost per instance so there is an economic"
          echo "    argument to be made for using a shared device amongst environments,"
          echo "    at the cost of losing parity between environments."
          echo "::endgroup::"
      # ==================================================
      # For debugging/understanding.
      - name: "B.11: Summarise Context Before Starting"
        run: |
          echo "::group::Initiation Information"
          echo "Actor                             : '${{github.actor}}'"
          echo "Event                             : '${{github.event_name}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Repo Information"
          echo "Repo                              : '${{github.repository}}'"
          echo "Repo Owner                        : '${{github.repository_owner}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Runner Information"
          echo "Workspace                         : '${{github.workspace}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Lib Variables"
          echo "Lib Repo GitHub UserName/Repo     : '${{env.LIB_REPO_GITHUB_USER_AND_REPO_NAME}}'"
          echo "Lib Repo Local Relative Dir       : '${{env.LIB_REPO_DEPLOYMENT_DIR}}'"
          echo "Lib Repo Bicep Recipe Directory   : '${{env.LIB_REPO_SOURCE_ENTRY_FOLDER}}'"
          echo "Lib Repo Bicep FileName           : '${{env.LIB_REPO_MAIN_BICEP_FILE}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Project Vars"
          echo "Project Name                      : '${{inputs.PROJECT_NAME}}'"
          echo "Project Service                   : '${{inputs.PROJECT_SERVICE_NAME}}'"
          echo "Project Description               : '${{inputs.PROJECT_DESCRIPTION}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Project Repo Variables"
          echo "Project Repo GitHub UserName/Repo : ${{inputs.SRC_REPO_GITHUB_USER_AND_REPO_NAME}}"
          echo "Project Repo Branch               : '${{inputs.SRC_REPO_BRANCH}}'"
          echo "Project Repo Local Relative Dir   : '/'"
          echo "Project Repo Src Directory        : '${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}}'"
          echo "Porject Repo Src FileName         : n/a"
          echo "::endgroup::"
          echo ""
          echo "::group::Azure Variables"
          echo "Azure Subscription                : '${{secrets.AZURE_SUBSCRIPTION_ID}}'"
          echo "Azure Creds                       : '***'" 
          echo "Azure Resource Location           : '${{inputs.AZURE_LOCATION_ID}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Azure Variables"
          echo "GitHub Token                      : ''...'"
          echo "::endgroup::"

      # ==================================================
      # For debugging/understanding.
      - name: "B.12: Summarise *Specific* Context Before Starting"
        run: |
          echo "::group::Dependencies (Injected Variables & Secrets)"
          echo "sqlServerAdminUserName            : '${{secrets.DB_ADMIN_NAME}}'"
          echo "sqlServerAdminPassword            : '${{secrets.DB_ADMIN_PWD}}'"
          echo "::endgroup::"
      # ==================================================
      # ==================================================
      # ==================================================

      # ==================================================
      # Checkout code from *this* repo
      # onto runner (not target SWA...)
      # without giving directory, so default:
      - name: "B.21: Checkout this Project's Repo"
        uses: actions/checkout@v4
        # Optional to specify 'repository' or 'path'
        # with:
        #  repository: ...THIS_REPO...
        #  path: '/'
      # ==================================================
      # Login to Azure, in order to manipulate remote resources
      - name: "B.22: Azure Login, using Action, to enable building resources"
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_ENTRA_APP_CLIENT_CREDS}}
      # ==================================================
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: "B.23: Checkout Library Repo"
        uses: actions/checkout@v4
        with:
          repository: "skysgh/resources.deployments.lib"
          path: ${{ env.LIB_REPO_DEPLOYMENT_DIR }}
      # ==================================================
      - name: "B.24: Summarise Lib Contents"
        run: |
          echo "::group::Run Context"
          echo "$GITHUB_WORKSPACE                 : '${{github.env}}'"
          pwd
          echo "Lib  Folder                       :'${{env.LIB_REPO_DEPLOYMENT_DIR}}'"
          echo "Target Lib File:"
          ls -la "${{ env.LIB_REPO_DEPLOYMENT_DIR }}/${{ env.LIB_REPO_SOURCE_ENTRY_FOLDER }}/${{env.LIB_REPO_MAIN_BICEP_FILE}}"
          echo "::endgroup::"
          echo 

          
      # ==================================================
      - name: "B.31: Run main bicep file (${{inputs.PROJECT_DESCRIPTION}})"
        id: crap
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          region: ${{ inputs.AZURE_LOCATION_ID }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
          #template: "${{ env.LIB_BICEP_DIRECTORY }}/${{env.LIB_REPO_MAIN_BICEP_FILE}}"
          template: "${{ env.LIB_REPO_DEPLOYMENT_DIR }}/${{ env.LIB_REPO_SOURCE_ENTRY_FOLDER }}/${{env.LIB_REPO_MAIN_BICEP_FILE}}"

          # Consider: sqlServerDbResourxeLocationId: 'F1','D1','B1','B2','S1','S2'
          # Consider: sqlServerDbResourceSKU: 'Basic', 'S0', 'S1', 'S2'
          # Consider: webServerFarmsResourceSKU can't be Shared/D1 if Linux is used
          # 
          # Do NOT wrap values in single quotes (only double quotes if need be)
          # Do NOT inject blank lines.

          # "${{ env.PROJECT_ENV_ID}}"
          
          parameters: >
            buildResourceGroup=true
            projectName="${{ inputs.PROJECT_NAME }}"
            projectServiceName="${{ inputs.PROJECT_SERVICE_NAME }}"
            environmentId="${{ inputs.PROJECT_ENVIRONMENT_ID}}"
            defaultResourceLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            logicResourceGroupLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            webServerFarmsResourceLocationId="${{ inputs.AZURE_LOCATION_ID }}"  
            webServerFarmsResourceSKU="S1"
            webSitesHttpOnly=true
            webSitesIdentityType="SystemAssigned"
            webSitesLinuxFxVersion="DOTNETCORE|Latest"
            webSitesSourceControlsRepositoryUrl="https://todo"
            webSitesSourceControlsRepositoryBranch="main"
            webSitesSourceControlsRepositoryToken="${{ secrets.GH_BASE_CLIENT_THEMED }}"
            webSitesSourceControlsRepositorySourceLocation="/"
            dataResourceGroupLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            sqlServerResourceLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            sqlServerMinimalTlsVersion="1.2"
            sqlServerIdentityType="None"
            sqlServerAdminUserName="${{secrets.DB_ADMIN_NAME}}"
            sqlServerAdminPassword="${{secrets.DB_ADMIN_PWD}}"
            sqlServerDbResourceName="Default"
            sqlServerDbResourceLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            sqlServerDbResourceSKU="S1"
            sqlServerDbResourceTier="Standard"
            sqlServerDbAvailabilityZone="NoPreference"
            sqlServerDbZoneRedundant=false
            sqlServerDbUseFreeLimit=false
            sqlServerDbFreeLimitExhaustionBehavior="BillOverUsage"
            sqlServerDbAutoPauseDelay=120
            sqlServerDbSampleName=""
            sqlServerDbIsLedgerOn=true
            sqlServerDbCreateMode="Default"
            sqlServerDbCollation="SQL_Latin1_General_CP1_CI_AS"
            sqlServerDbCatalogCollation="DATABASE_DEFAULT"
            
          # Removed
          #  repositoryToken="${{ secrets.GH_BASE_CLIENT_THEMED }}"

          failOnStdErr: false
      # ==================================================
      - name: "Summarising where to publish the package that follows..."
        run: |
          echo "To: ${{ steps.crap.outputs.logicResourceGroupName }}/${{ steps.crap.outputs.webSitesResourceName }}"
      # ==================================================
      - name: "B.31: Install Dot.NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
      # ==================================================
      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version
      # ==================================================
      - name: Install dependencies
        run: dotnet restore ${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}}
      # ==================================================
      - name: Build
        run: dotnet build ${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}} 
      # ==================================================
      - name: Test with the dotnet CLI
        run: dotnet test ${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}}      
      # ==================================================
      - name: Publish Package
        run: dotnet publish ${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}} --output ${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}}/published      
      # ==================================================
      - name: Check Published Directory
        run: ls -la ${{ inputs.SRC_REPO_SOURCE_ENTRY_FOLDER }}/published        
      # ==================================================
      - name: Publish Package
        uses: azure/webapps-deploy@v3
        # app-name: name of the Azure Web App
        # target-path: ...
        # resource-group-name: ....
         # ${{inputs.APP_NAME}}
        with:
           resource-group-name: ${{steps.crap.outputs.logicResourceGroupName}}
           app-name: ${{ steps.crap.outputs.webSitesResourceName }}
           package: ${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}}/published
           startup-command: dotnet run

      # ==================================================
      - name: "Summarising where to publish the package that follows..."
          # webSitesModule.outputs.customDomains
        run: |
          echo "View outcome here: "http://${{ steps.crap.outputs.webSitesDefaultHostName }}"

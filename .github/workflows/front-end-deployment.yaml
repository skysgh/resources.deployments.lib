name: Build Frontend (SWA, Deployment, etc.)

# Triggers, on specific branches
on:
  # marks it as a callee workflow:
  workflow_call:
  # define optional and requierd inputs
  # required from caller: 
    inputs:
      # ======================================================================
      # PROJECT VARIABLES
      # ======================================================================
      # The project name, which informs naming of 
      # Azure resource groups and resource names 
      # definately changes per project.
      # Note: it could be set here, or come from GitHUb repo vars:
      PROJECT_NAME:
        required: true
        type: string
      PROJECT_SERVICE_NAME:
        required: false
        type: string
      PROJECT_ENVIRONMENT_ID:
        required: true
        type: string
      PROJECT_DESCRIPTION:
        required: false
        type: string
      # ======================================================================
      # SRC VARIABLES
      # ======================================================================
      SRC_REPO_GITHUB_USER_AND_REPO_NAME:
        required: true
        type: string
      SRC_GITHUB_REPO_LANDING_PAGE_URL: # "https://github.com/skysgh/BASE.Jump.Dev.Client.Themed"
        required: true
        type: string
      SRC_REPO_BRANCH:
        required: true
        type: string
      SRC_REPO_SOURCE_ENTRY_FOLDER:
        required: true
        type: string
      SRC_REPO_SOURCE_ENTRY_FILE:
        required: false
        type: string
      # ======================================================================
      # SWA VARIABLES
      # ======================================================================
      SWA_ANGULAR_PROJECT_NAME: #"base"
        required: true
        type: string
      SWA_ANGULAR_BUILD_COMMAND: #"npm install && npm run build"
        required: true
        type: string
      # ======================================================================
      # AZURE VARIABLES
      # ======================================================================
      AZURE_LOCATION_ID: # used for Resource Group location
        required: true
        type: string
      AZURE_LOCATION_ID_SWA: # restrained allowable
        required: true
        type: string
    secrets:
      # AZURE:
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_ENTRA_APP_CLIENT_CREDS:
        required: true
      # GITHUB:
      GH_TOKEN:
        required: true
      GH_REPO_TOKEN:
        required: true



env:
  # ======================================================================
  # LIB VARIABLES
  # ======================================================================
  # The file invoked changes per project/service/tier:
  # As do the parameters (at bottom) that are supplied.
  LIB_REPO_MAIN_BICEP_FILE: "front-end-deployment.bicep"
  # Whereas these vars probably don't change project to project,
  # which define where to download lib files from, the dir to deploy to here
  # and the folder to find the above script in:
  LIB_REPO_GITHUB_USER_AND_REPO_NAME: "skysgh/resources.deployments.lib"
  LIB_REPO_BRANCH: "main"
  LIB_REPO_SOURCE_ENTRY_FOLDER: "SOURCE/infrastructure/azure/bicep/recipes"
  LIB_REPO_DEPLOYMENT_DIR: "DeploymentLib" 


# Running on one runner:
jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    environment: "NP"
    env:
      # DEFINE REPO CONSTANTS
      NODE_VERSION: 20.11.0
      # ACTIONS_STEP_DEBUG: 'true' 
      ACTIONS_RUNNER_DEBUG: "true"
    steps:
      # ==================================================
      - name: "B.01: Description"
        run: |
          echo "::group::Purpose"
          echo "Deploys the infrastructure for supporting"
          echo "the service client."
          echo "::endgroup::"
      # ==================================================
      - name: "B.02: Explanations"
        run: |
          echo "::group::Purpose"
          echo "At a high level, it is to develop"
          echo "the backend infrastructure needed for"
          echo "WWW accessible services."
          echo "::endgroup::"
      # ==================================================
      - name: "B.03: Details"
        run: |
          echo "::group::Infrastructure Details"
          echo "As for individual component purpose and settings:"
          echo "- Sql Server:"
          echo "  - Resourcing:"
      # ==================================================
      # For debugging/understanding.
      - name: "B.11: Summarise Context Before Starting"
        # Showing too much, remove: ${{secrets.AZURE_ENTRA_APP_CLIENT_CREDS}}
        run: |
          echo "::group::Initiation Information"
          echo "Actor                             : '${{github.actor}}'"
          echo "Event                             : '${{github.event_name}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Repo Information"
          echo "Repo                              : '${{github.repository}}'"
          echo "Repo Owner                        : '${{github.repository_owner}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Runner Information"
          echo "Workspace                         : '${{github.workspace}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Lib Variables"
          echo "Lib Repo GitHub UserName/Repo     : '${{env.LIB_REPO_GITHUB_USER_AND_REPO_NAME}}'"
          echo "Lib Repo Local Relative Dir       : '${{env.LIB_REPO_DEPLOYMENT_DIR}}'"
          echo "Lib Repo Bicep Recipe Directory   : '${{env.LIB_REPO_SOURCE_ENTRY_FOLDER}}'"
          echo "Lib Repo Bicep FileName           : '${{env.LIB_REPO_MAIN_BICEP_FILE}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Project Vars"
          echo "Project Name                      : '${{inputs.PROJECT_NAME}}'"
          echo "Project Service                   : '${{inputs.PROJECT_SERVICE_NAME}}'"
          echo "Project Description               : '${{inputs.PROJECT_DESCRIPTION}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Project Repo Variables"
          echo "Project Repo GitHub UserName/Repo : ${{inputs.SRC_REPO_GITHUB_USER_AND_REPO_NAME}}"
          echo "Project Repo Branch               : '${{inputs.SRC_REPO_BRANCH}}'"
          echo "Project Repo Local Relative Dir   : '/'"
          echo "Project Repo Src Directory        : '${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER}}'"
          echo "Project Repo Src FileName         : '${{inputs.SRC_REPO_SOURCE_ENTRY_FILE}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::Azure Variables"
          echo "Azure Subscription                : '${{secrets.AZURE_SUBSCRIPTION_ID}}'"
          echo "Azure Creds                       : '${{secrets.AZURE_ENTRA_APP_CLIENT_CREDS}} (TODO: showing too much)'" 
          echo "Azure Resource Location           : '${{inputs.AZURE_LOCATION_ID}}'"
          echo "Azure Resource Location Alt       : '${{inputs.AZURE_LOCATION_ID_SWA}}'"
          echo "::endgroup::"
          echo ""
          echo "::group::GitHub Variables"
          echo "GitHUb Token                      : '${{secrets.GITHUB_TOKEN}}'"
          echo "GH Token                          : '${{secrets.GH_TOKEN}}'"
          echo "(same as GitHub Token?)           : '${{secrets.GH_TOKEN == secrets.GITHUB_TOKEN}}'"
          echo "GH Repo Token                     : '${{secrets.GH_REPO_TOKEN}}'"
          echo "(same as GitHub Token?)           : '${{secrets.GH_REPO_TOKEN == secrets.GITHUB_TOKEN}}'"
          echo "::endgroup::"

      # ==================================================
      # For debugging/understanding.
      - name: "B.12: Summarise *Specific* Context Before Starting"
        run: |
          echo ""
          echo "::group::SWA"
          echo "SWA Project Name.....: '${{inputs.SWA_ANGULAR_PROJECT_NAME}}'"
          echo "SWA Angular Built Cmd: '${{inputs.SWA_ANGULAR_BUILD_COMMAND}}'"
          echo "::endgroup::"          

      # ==================================================
      # Checkout code from *this* repo
      # onto runner (not target SWA...)
      # without giving directory, so default:
      - name: "B.21: Checkout this Project's Repo"
        uses: actions/checkout@v4
        # Optional to specify 'repository' or 'path'
        # with:
        #  repository: ...THIS_REPO...# ${{ github.repository }}
        #  path: '/'  # ${{ github.ref }}
      # ==================================================
      # Login to Azure, in order to manipulate remote resources
      - name: "B.22: Azure Login, using Action, to enable building resources"
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_ENTRA_APP_CLIENT_CREDS}}
      # ==================================================
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: "B.23: Checkout Library Repo"
        uses: actions/checkout@v4
        with:
          repository: "skysgh/resources.deployments.lib"
          path: ${{ env.LIB_REPO_DEPLOYMENT_DIR }}
      # ==================================================
      - name: "B.24: Summarise Lib Contents"
        run: |
          echo "::group::Run Context"
          echo "$GITHUB_WORKSPACE                 : '${{github.env}}'"
          pwd
          echo "Lib  Folder                       :'${{env.LIB_REPO_DEPLOYMENT_DIR}}'"
          echo "Target Lib File:"
          ls -la "${{ env.LIB_REPO_DEPLOYMENT_DIR }}/${{ env.LIB_REPO_SOURCE_ENTRY_FOLDER }}/${{env.LIB_REPO_MAIN_BICEP_FILE}}"
          echo "::endgroup::"
          echo 

      # ==================================================
#      - name: NPM - Download Node packages
#        run: |
#          # Download libraries
#          npm install --prefix ${PROJECT_SUBDIR}

      # ==================================================
 #     - name: NPM - Build the application (Note that we are still on runner, not target swa...)
 #       run: |
 #         # Build, Compile, Package:
 #         npm run --prefix ${PROJECT_SUBDIR} build



      # ==================================================
#      - name: Build And Deploy SWA using Action
#        id: builddeploy
#        uses: Azure/static-web-apps-deploy@v1
#        with:
#          
#          # ?          
#          action: "upload"
#          # 
#          repo_token: ${{ secrets.GH_TOKEN }} # Used for Github integrations (i.e. PR comments)
#          # 
#          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_WATER_0D3003200 }}
#
#          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
#          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
#          app_location: "/SOURCE/App.Service.Client.Web" # App source code path
#          api_location: "" # Api source code path - optional
#          # and where it gets built to:          
#          output_location: "dist/base" # Built app content directory - optional
#        env:
#          NODE_VERSION: 20.11.0
#          ###### End of Repository/Build Configurations ######

      # ==================================================
#      NOTE: this has been moved out of yaml.
#      - name: Ensure Resource Group(s)
#        uses: azure/arm-deploy@v1
#        with:
#          scope: subscription
#          region: ${{ inputs.AZURE_LOCATION_ID }}
#          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#          #resourceGroupName: ${{ env.RG_NAME }}
#          template: "${{LIB_REPO_SOURCE_ENTRY_FOLDER}}/resource-group.bicep"
#          parameters: ""
#          failOnStdErr: false


      # ==================================================
      # template: "${{ env.LIB_REPO_SOURCE_ENTRY_FOLDER }}/${{env.LIB_REPO_MAIN_BICEP_FILE}}"
      #resourceGroupName: ${{ env.RG_NAME }}
      # IMPORTANT: swaRepositoryToken WAS GH_PAT.
      - name: "B:31: Run main bicep file (creating RG & SWA)"
        id: crap
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          region: ${{ inputs.AZURE_LOCATION_ID }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: "${{ env.LIB_REPO_DEPLOYMENT_DIR }}/${{ env.LIB_REPO_SOURCE_ENTRY_FOLDER }}/${{env.LIB_REPO_MAIN_BICEP_FILE}}"
          parameters: >
            projectName="${{ inputs.PROJECT_NAME }}"
            projectServiceName="${{ inputs.PROJECT_SERVICE_NAME }}"
            environmentId="${{ inputs.PROJECT_ENVIRONMENT_ID}}"
            defaultResourceLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            clientResourceGroupLocationId="${{ inputs.AZURE_LOCATION_ID }}"
            swaResourceLocationId="${{ inputs.AZURE_LOCATION_ID_SWA }}" 
            swaRepositoryUrl="${{ inputs.SRC_GITHUB_REPO_LANDING_PAGE_URL }}"
            swaRepositoryToken="${{ secrets.GH_REPO_TOKEN }}"
            swaAppLocation="${{ inputs.SRC_REPO_SOURCE_ENTRY_FOLDER }}"
            swaAppBuildCommand="${{ inputs.SWA_ANGULAR_BUILD_COMMAND }}"  
            swaOutputLocation="dist/${{inputs.SWA_ANGULAR_PROJECT_NAME}}"
          failOnStdErr: false
      # ==================================================
      - name: "B:32: Post Static Web App (SWA) Deployment - get API key for deployment and URL"
        id: static_web_app_apikey
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name '${{ steps.crap.outputs.resourceName }}' | jq -r '.properties.apiKey')
            DEFAULTHOSTNAME=$(az staticwebapp show -n '${{ steps.crap.outputs.resourceName }}' | jq -r '.defaultHostname')
            PREVIEW_URL="https://${DEFAULTHOSTNAME/.[1-9]./-${{github.event.pull_request.number }}.${{ env.LOCATION }}.1.}"
            echo "APIKEY=$APIKEY" >> $GITHUB_OUTPUT
            echo "DEFAULTHOSTNAME=$DEFAULTHOSTNAME" >> $GITHUB_OUTPUT
            echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_OUTPUT

            echo "::group::SWA"
              echo "SWA API Key..........: '${APIKEY}'"
              echo "SWA Default HostName.: '${DEFAULTHOSTNAME}'"
              echo "SWA Project SubDir...: '${PREVIEW_URL}'"
            echo "::endgroup::"    
      # ==================================================
      - name: "B.24: Summarise Lib Contents"
        run: |
          echo "::group::Run Context"
          echo "Azure SWA API Token             : '${{ steps.static_web_app_apikey.outputs.APIKEY }}'"
          echo "GH_TOKEN                        : '${{ secrets.GH_TOKEN }}'"
      # ==================================================
      - name: "B:33: Static Web App - build and deploy"
        id: static_web_app_build_and_deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.APIKEY }}
          # "Token for interacting with the Github repository. Currently used only for commenting on Pull Requests."
          repo_token: ${{ secrets.GH_TOKEN }} 
          action: 'upload'
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: '${{inputs.SRC_REPO_SOURCE_ENTRY_FOLDER }}' # App source code path
          api_build_command: '${{inputs.SWA_ANGULAR_BUILD_COMMAND}}'
          output_location: 'dist/${{inputs.SWA_ANGULAR_PROJECT_NAME}}' 
          # api_location: '' # Api source code path - optional
      # ==================================================
      # NEXT STEPS:
      # Write env.DEFAULTHOSTNAME somewhere outside of here for subsuquent access.
      # A client is thin, but still some things to set up.
      # Config file adjustments.
      # Locking down to https? Or Redirection?
      # Routing?
      # Get Existing *.Cert from somewhere and Assign
      # ==================================================
      - name: "B:40: Summarise"
        id: summarise
        run: |
          echo "View: https://${{env.DEFAULTHOSTNAME}}"
